// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// npm install prisma --save-dev

// npx prisma init --datasource-provider sqlite

// Erzeugt SQL Datei, die auf die DB ausgeführt wird
// npx prisma migrate dev --name init

// Datenbank ansehen
// npx prisma studio

// Extension installieren
// In Ordner mit dev.db wechseln
// sqlite3 dev.db
// .schema
// Gibt DDL aus
// .quit

model Drink {
  id      Int @id @default(autoincrement())
  name    String
  ml      Float
  price   Float
  alcohol Float
  order OrderDrink[]
}

model Order {
  id  Int @id @default(autoincrement())
  createdAt DateTime  @default(now())
  drinks OrderDrink[]
  customerId  Int

  customer User @relation("CustomerOrders", fields: [customerId], references: [id])
}

// Model für n:m Beziehung
model OrderDrink {
  orderId Int
  drinkId Int
  quantity  Int

  // onDelete: Cascade löscht das OrderDrink Element, wenn die entsprechende Order gelöscht wird
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  drink Drink @relation(fields: [drinkId], references: [id])

  @@id([orderId, drinkId])
}

// Wenn wir Order verändern, müssen die bestehenden Einträge aus der DB gelöscht werden!
model User {
  id  Int @id @default(autoincrement())
  name  String
  email String  @unique
  password  String
  createdOrders  Order[]  @relation("CustomerOrders")
}